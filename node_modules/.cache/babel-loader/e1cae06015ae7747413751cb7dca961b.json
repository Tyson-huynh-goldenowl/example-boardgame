{"ast":null,"code":"var Type;\n\n(function (Type) {\n  Type[Type[\"SYNC\"] = 0] = \"SYNC\";\n  Type[Type[\"ASYNC\"] = 1] = \"ASYNC\";\n})(Type || (Type = {}));\n/**\r\n * Type guard that checks if a storage implementation is synchronous.\r\n */\n\n\nfunction isSynchronous(storageAPI) {\n  return storageAPI.type() === Type.SYNC;\n}\n\nclass Async {\n  /* istanbul ignore next */\n  type() {\n    /* istanbul ignore next */\n    return Type.ASYNC;\n  }\n  /**\r\n   * Create a new match.\r\n   *\r\n   * This might just need to call setState and setMetadata in\r\n   * most implementations.\r\n   *\r\n   * However, it exists as a separate call so that the\r\n   * implementation can provision things differently when\r\n   * a match is created.  For example, it might stow away the\r\n   * initial match state in a separate field for easier retrieval.\r\n   */\n\n  /* istanbul ignore next */\n\n\n  async createMatch(matchID, opts) {\n    if (this.createGame) {\n      console.warn('The database connector does not implement a createMatch method.', '\\nUsing the deprecated createGame method instead.');\n      return this.createGame(matchID, opts);\n    } else {\n      console.error('The database connector does not implement a createMatch method.');\n    }\n  }\n  /**\r\n   * Return all matches.\r\n   */\n\n  /* istanbul ignore next */\n\n\n  async listMatches(opts) {\n    if (this.listGames) {\n      console.warn('The database connector does not implement a listMatches method.', '\\nUsing the deprecated listGames method instead.');\n      return this.listGames(opts);\n    } else {\n      console.error('The database connector does not implement a listMatches method.');\n    }\n  }\n\n}\n\nclass Sync {\n  type() {\n    return Type.SYNC;\n  }\n  /**\r\n   * Connect.\r\n   */\n\n\n  connect() {\n    return;\n  }\n  /**\r\n   * Create a new match.\r\n   *\r\n   * This might just need to call setState and setMetadata in\r\n   * most implementations.\r\n   *\r\n   * However, it exists as a separate call so that the\r\n   * implementation can provision things differently when\r\n   * a match is created.  For example, it might stow away the\r\n   * initial match state in a separate field for easier retrieval.\r\n   */\n\n  /* istanbul ignore next */\n\n\n  createMatch(matchID, opts) {\n    if (this.createGame) {\n      console.warn('The database connector does not implement a createMatch method.', '\\nUsing the deprecated createGame method instead.');\n      return this.createGame(matchID, opts);\n    } else {\n      console.error('The database connector does not implement a createMatch method.');\n    }\n  }\n  /**\r\n   * Return all matches.\r\n   */\n\n  /* istanbul ignore next */\n\n\n  listMatches(opts) {\n    if (this.listGames) {\n      console.warn('The database connector does not implement a listMatches method.', '\\nUsing the deprecated listGames method instead.');\n      return this.listGames(opts);\n    } else {\n      console.error('The database connector does not implement a listMatches method.');\n    }\n  }\n\n}\n\nexport { Async as A, Sync as S, isSynchronous as i };","map":{"version":3,"sources":["/Users/goldenowl/Desktop/example-boardgame/node_modules/boardgame.io/dist/esm/base-13e38c3e.js"],"names":["Type","isSynchronous","storageAPI","type","SYNC","Async","ASYNC","createMatch","matchID","opts","createGame","console","warn","error","listMatches","listGames","Sync","connect","A","S","i"],"mappings":"AAAA,IAAIA,IAAJ;;AACA,CAAC,UAAUA,IAAV,EAAgB;AACbA,EAAAA,IAAI,CAACA,IAAI,CAAC,MAAD,CAAJ,GAAe,CAAhB,CAAJ,GAAyB,MAAzB;AACAA,EAAAA,IAAI,CAACA,IAAI,CAAC,OAAD,CAAJ,GAAgB,CAAjB,CAAJ,GAA0B,OAA1B;AACH,CAHD,EAGGA,IAAI,KAAKA,IAAI,GAAG,EAAZ,CAHP;AAIA;AACA;AACA;;;AACA,SAASC,aAAT,CAAuBC,UAAvB,EAAmC;AAC/B,SAAOA,UAAU,CAACC,IAAX,OAAsBH,IAAI,CAACI,IAAlC;AACH;;AACD,MAAMC,KAAN,CAAY;AACR;AACAF,EAAAA,IAAI,GAAG;AACH;AACA,WAAOH,IAAI,CAACM,KAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;;;AACiB,QAAXC,WAAW,CAACC,OAAD,EAAUC,IAAV,EAAgB;AAC7B,QAAI,KAAKC,UAAT,EAAqB;AACjBC,MAAAA,OAAO,CAACC,IAAR,CAAa,iEAAb,EAAgF,mDAAhF;AACA,aAAO,KAAKF,UAAL,CAAgBF,OAAhB,EAAyBC,IAAzB,CAAP;AACH,KAHD,MAIK;AACDE,MAAAA,OAAO,CAACE,KAAR,CAAc,iEAAd;AACH;AACJ;AACD;AACJ;AACA;;AACI;;;AACiB,QAAXC,WAAW,CAACL,IAAD,EAAO;AACpB,QAAI,KAAKM,SAAT,EAAoB;AAChBJ,MAAAA,OAAO,CAACC,IAAR,CAAa,iEAAb,EAAgF,kDAAhF;AACA,aAAO,KAAKG,SAAL,CAAeN,IAAf,CAAP;AACH,KAHD,MAIK;AACDE,MAAAA,OAAO,CAACE,KAAR,CAAc,iEAAd;AACH;AACJ;;AAvCO;;AAyCZ,MAAMG,IAAN,CAAW;AACPb,EAAAA,IAAI,GAAG;AACH,WAAOH,IAAI,CAACI,IAAZ;AACH;AACD;AACJ;AACA;;;AACIa,EAAAA,OAAO,GAAG;AACN;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;;;AACAV,EAAAA,WAAW,CAACC,OAAD,EAAUC,IAAV,EAAgB;AACvB,QAAI,KAAKC,UAAT,EAAqB;AACjBC,MAAAA,OAAO,CAACC,IAAR,CAAa,iEAAb,EAAgF,mDAAhF;AACA,aAAO,KAAKF,UAAL,CAAgBF,OAAhB,EAAyBC,IAAzB,CAAP;AACH,KAHD,MAIK;AACDE,MAAAA,OAAO,CAACE,KAAR,CAAc,iEAAd;AACH;AACJ;AACD;AACJ;AACA;;AACI;;;AACAC,EAAAA,WAAW,CAACL,IAAD,EAAO;AACd,QAAI,KAAKM,SAAT,EAAoB;AAChBJ,MAAAA,OAAO,CAACC,IAAR,CAAa,iEAAb,EAAgF,kDAAhF;AACA,aAAO,KAAKG,SAAL,CAAeN,IAAf,CAAP;AACH,KAHD,MAIK;AACDE,MAAAA,OAAO,CAACE,KAAR,CAAc,iEAAd;AACH;AACJ;;AA3CM;;AA8CX,SAASR,KAAK,IAAIa,CAAlB,EAAqBF,IAAI,IAAIG,CAA7B,EAAgClB,aAAa,IAAImB,CAAjD","sourcesContent":["var Type;\r\n(function (Type) {\r\n    Type[Type[\"SYNC\"] = 0] = \"SYNC\";\r\n    Type[Type[\"ASYNC\"] = 1] = \"ASYNC\";\r\n})(Type || (Type = {}));\r\n/**\r\n * Type guard that checks if a storage implementation is synchronous.\r\n */\r\nfunction isSynchronous(storageAPI) {\r\n    return storageAPI.type() === Type.SYNC;\r\n}\r\nclass Async {\r\n    /* istanbul ignore next */\r\n    type() {\r\n        /* istanbul ignore next */\r\n        return Type.ASYNC;\r\n    }\r\n    /**\r\n     * Create a new match.\r\n     *\r\n     * This might just need to call setState and setMetadata in\r\n     * most implementations.\r\n     *\r\n     * However, it exists as a separate call so that the\r\n     * implementation can provision things differently when\r\n     * a match is created.  For example, it might stow away the\r\n     * initial match state in a separate field for easier retrieval.\r\n     */\r\n    /* istanbul ignore next */\r\n    async createMatch(matchID, opts) {\r\n        if (this.createGame) {\r\n            console.warn('The database connector does not implement a createMatch method.', '\\nUsing the deprecated createGame method instead.');\r\n            return this.createGame(matchID, opts);\r\n        }\r\n        else {\r\n            console.error('The database connector does not implement a createMatch method.');\r\n        }\r\n    }\r\n    /**\r\n     * Return all matches.\r\n     */\r\n    /* istanbul ignore next */\r\n    async listMatches(opts) {\r\n        if (this.listGames) {\r\n            console.warn('The database connector does not implement a listMatches method.', '\\nUsing the deprecated listGames method instead.');\r\n            return this.listGames(opts);\r\n        }\r\n        else {\r\n            console.error('The database connector does not implement a listMatches method.');\r\n        }\r\n    }\r\n}\r\nclass Sync {\r\n    type() {\r\n        return Type.SYNC;\r\n    }\r\n    /**\r\n     * Connect.\r\n     */\r\n    connect() {\r\n        return;\r\n    }\r\n    /**\r\n     * Create a new match.\r\n     *\r\n     * This might just need to call setState and setMetadata in\r\n     * most implementations.\r\n     *\r\n     * However, it exists as a separate call so that the\r\n     * implementation can provision things differently when\r\n     * a match is created.  For example, it might stow away the\r\n     * initial match state in a separate field for easier retrieval.\r\n     */\r\n    /* istanbul ignore next */\r\n    createMatch(matchID, opts) {\r\n        if (this.createGame) {\r\n            console.warn('The database connector does not implement a createMatch method.', '\\nUsing the deprecated createGame method instead.');\r\n            return this.createGame(matchID, opts);\r\n        }\r\n        else {\r\n            console.error('The database connector does not implement a createMatch method.');\r\n        }\r\n    }\r\n    /**\r\n     * Return all matches.\r\n     */\r\n    /* istanbul ignore next */\r\n    listMatches(opts) {\r\n        if (this.listGames) {\r\n            console.warn('The database connector does not implement a listMatches method.', '\\nUsing the deprecated listGames method instead.');\r\n            return this.listGames(opts);\r\n        }\r\n        else {\r\n            console.error('The database connector does not implement a listMatches method.');\r\n        }\r\n    }\r\n}\n\nexport { Async as A, Sync as S, isSynchronous as i };\n"]},"metadata":{},"sourceType":"module"}