{"ast":null,"code":"var _jsxFileName = \"/Users/goldenowl/Desktop/example-boardgame/src/Board.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class TicTacToeBoard extends React.Component {\n  onClick(id) {\n    this.props.moves.clickCell(id);\n  }\n\n  render() {\n    let winner = '';\n\n    if (this.props.ctx.gameover) {\n      winner = this.props.ctx.gameover.winner !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"winner\",\n        children: [\"Winner: \", this.props.ctx.gameover.winner]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"winner\",\n        children: \"Draw!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this);\n    }\n\n    const cellStyle = {\n      border: '1px solid #555',\n      width: '50px',\n      height: '50px',\n      lineHeight: '50px',\n      textAlign: 'center'\n    };\n    let tbody = [];\n\n    for (let i = 0; i < 10; i++) {\n      let cells = [];\n\n      for (let j = 0; j < 10; j++) {\n        const id = 1 * i + j;\n        cells.push( /*#__PURE__*/_jsxDEV(\"td\", {\n          style: cellStyle,\n          onClick: () => this.onClick(id),\n          children: this.props.G.cells[id]\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this));\n      }\n\n      tbody.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: cells\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"board\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tbody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), winner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/goldenowl/Desktop/example-boardgame/src/Board.js"],"names":["React","TicTacToeBoard","Component","onClick","id","props","moves","clickCell","render","winner","ctx","gameover","undefined","cellStyle","border","width","height","lineHeight","textAlign","tbody","i","cells","j","push","G"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AAClDC,EAAAA,OAAO,CAACC,EAAD,EAAK;AACV,SAAKC,KAAL,CAAWC,KAAX,CAAiBC,SAAjB,CAA2BH,EAA3B;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,QAAIC,MAAM,GAAG,EAAb;;AACA,QAAI,KAAKJ,KAAL,CAAWK,GAAX,CAAeC,QAAnB,EAA6B;AAC3BF,MAAAA,MAAM,GACJ,KAAKJ,KAAL,CAAWK,GAAX,CAAeC,QAAf,CAAwBF,MAAxB,KAAmCG,SAAnC,gBACE;AAAK,QAAA,EAAE,EAAC,QAAR;AAAA,+BAA0B,KAAKP,KAAL,CAAWK,GAAX,CAAeC,QAAf,CAAwBF,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,gBAGE;AAAK,QAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAMD;;AAED,UAAMI,SAAS,GAAG;AAChBC,MAAAA,MAAM,EAAE,gBADQ;AAEhBC,MAAAA,KAAK,EAAE,MAFS;AAGhBC,MAAAA,MAAM,EAAE,MAHQ;AAIhBC,MAAAA,UAAU,EAAE,MAJI;AAKhBC,MAAAA,SAAS,EAAE;AALK,KAAlB;AAQA,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,cAAMlB,EAAE,GAAG,IAAIgB,CAAJ,GAAQE,CAAnB;AACAD,QAAAA,KAAK,CAACE,IAAN,eACE;AAAI,UAAA,KAAK,EAAEV,SAAX;AAA+B,UAAA,OAAO,EAAE,MAAM,KAAKV,OAAL,CAAaC,EAAb,CAA9C;AAAA,oBACG,KAAKC,KAAL,CAAWmB,CAAX,CAAaH,KAAb,CAAmBjB,EAAnB;AADH,WAA2BA,EAA3B;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;;AACDe,MAAAA,KAAK,CAACI,IAAN,eAAW;AAAA,kBAAaF;AAAb,SAASD,CAAT;AAAA;AAAA;AAAA;AAAA,cAAX;AACD;;AAED,wBACE;AAAA,8BACE;AAAO,QAAA,EAAE,EAAC,OAAV;AAAA,+BACE;AAAA,oBAAQD;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAIGV,MAJH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA9CiD","sourcesContent":["import React from 'react';\n\nexport class TicTacToeBoard extends React.Component {\n  onClick(id) {\n    this.props.moves.clickCell(id);\n  }\n\n  render() {\n    let winner = '';\n    if (this.props.ctx.gameover) {\n      winner =\n        this.props.ctx.gameover.winner !== undefined ? (\n          <div id=\"winner\">Winner: {this.props.ctx.gameover.winner}</div>\n        ) : (\n          <div id=\"winner\">Draw!</div>\n        );\n    }\n\n    const cellStyle = {\n      border: '1px solid #555',\n      width: '50px',\n      height: '50px',\n      lineHeight: '50px',\n      textAlign: 'center',\n    };\n\n    let tbody = [];\n    for (let i = 0; i < 10; i++) {\n      let cells = [];\n      for (let j = 0; j < 10; j++) {\n        const id = 1 * i + j;\n        cells.push(\n          <td style={cellStyle} key={id} onClick={() => this.onClick(id)}>\n            {this.props.G.cells[id]}\n          </td>\n        );\n      }\n      tbody.push(<tr key={i}>{cells}</tr>);\n    }\n\n    return (\n      <div>\n        <table id=\"board\">\n          <tbody>{tbody}</tbody>\n        </table>\n        {winner}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}