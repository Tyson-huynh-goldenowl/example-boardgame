{"ast":null,"code":"var Flatted = function (Primitive, primitive) {\n  /*!\n   * ISC License\n   *\n   * Copyright (c) 2018, Andrea Giammarchi, @WebReflection\n   *\n   * Permission to use, copy, modify, and/or distribute this software for any\n   * purpose with or without fee is hereby granted, provided that the above\n   * copyright notice and this permission notice appear in all copies.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n   * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n   * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n   * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n   * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n   * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n   * PERFORMANCE OF THIS SOFTWARE.\n   */\n  var Flatted = {\n    parse: function parse(text) {\n      var input = JSON.parse(text, Primitives).map(primitives);\n      var value = input[0];\n      return typeof value === 'object' && value ? revive(input, new Set(), value) : value;\n    },\n    stringify: function stringify(value) {\n      for (var firstRun, known = new Map(), input = [], output = [], i = +set(known, input, value), replace = function (key, value) {\n        if (firstRun) return firstRun = !firstRun, value;\n\n        switch (typeof value) {\n          case 'object':\n            if (value === null) return value;\n\n          case primitive:\n            return known.get(value) || set(known, input, value);\n        }\n\n        return value;\n      }; i < input.length; i++) {\n        firstRun = true;\n        output[i] = JSON.stringify(input[i], replace);\n      }\n\n      return '[' + output.join(',') + ']';\n    }\n  };\n  return Flatted;\n\n  function revive(input, parsed, output) {\n    return Object.keys(output).reduce(function (output, key) {\n      var value = output[key];\n\n      if (value instanceof Primitive) {\n        var tmp = input[value];\n\n        if (typeof tmp === 'object' && !parsed.has(tmp)) {\n          parsed.add(tmp);\n          output[key] = revive(input, parsed, tmp);\n        } else {\n          output[key] = tmp;\n        }\n      }\n\n      return output;\n    }, output);\n  }\n\n  function set(known, input, value) {\n    var index = Primitive(input.push(value) - 1);\n    known.set(value, index);\n    return index;\n  }\n\n  function primitives(value) {\n    return value instanceof Primitive ? Primitive(value) : value;\n  }\n\n  function Primitives(key, value) {\n    return typeof value === primitive ? new Primitive(value) : value;\n  }\n}(String, 'string');\n\nexport default Flatted;\nexport const parse = Flatted.parse;\nexport const stringify = Flatted.stringify;","map":{"version":3,"sources":["/Users/goldenowl/Desktop/example-boardgame/node_modules/boardgame.io/node_modules/flatted/esm/index.js"],"names":["Flatted","Primitive","primitive","parse","text","input","JSON","Primitives","map","primitives","value","revive","Set","stringify","firstRun","known","Map","output","i","set","replace","key","get","length","join","parsed","Object","keys","reduce","tmp","has","add","index","push","String"],"mappings":"AAAA,IAAIA,OAAO,GAAI,UAAUC,SAAV,EAAqBC,SAArB,EAAgC;AAE7C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE,MAAIF,OAAO,GAAG;AAEZG,IAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,IAAf,EAAqB;AAC1B,UAAIC,KAAK,GAAGC,IAAI,CAACH,KAAL,CAAWC,IAAX,EAAiBG,UAAjB,EAA6BC,GAA7B,CAAiCC,UAAjC,CAAZ;AACA,UAAIC,KAAK,GAAGL,KAAK,CAAC,CAAD,CAAjB;AACA,aAAO,OAAOK,KAAP,KAAiB,QAAjB,IAA6BA,KAA7B,GACCC,MAAM,CAACN,KAAD,EAAQ,IAAIO,GAAJ,EAAR,EAAiBF,KAAjB,CADP,GACiCA,KADxC;AAED,KAPW;AASZG,IAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBH,KAAnB,EAA0B;AACnC,WAAK,IACHI,QADG,EAEHC,KAAK,GAAG,IAAIC,GAAJ,EAFL,EAGHX,KAAK,GAAG,EAHL,EAIHY,MAAM,GAAG,EAJN,EAKHC,CAAC,GAAG,CAACC,GAAG,CAACJ,KAAD,EAAQV,KAAR,EAAeK,KAAf,CALL,EAMHU,OAAO,GAAG,UAAUC,GAAV,EAAeX,KAAf,EAAsB;AAC9B,YAAII,QAAJ,EAAc,OAAQA,QAAQ,GAAG,CAACA,QAAb,EAAwBJ,KAA/B;;AACd,gBAAQ,OAAOA,KAAf;AACE,eAAK,QAAL;AACE,gBAAIA,KAAK,KAAK,IAAd,EAAoB,OAAOA,KAAP;;AACtB,eAAKR,SAAL;AACE,mBAAOa,KAAK,CAACO,GAAN,CAAUZ,KAAV,KAAoBS,GAAG,CAACJ,KAAD,EAAQV,KAAR,EAAeK,KAAf,CAA9B;AAJJ;;AAMA,eAAOA,KAAP;AACD,OAfH,EAgBEQ,CAAC,GAAGb,KAAK,CAACkB,MAhBZ,EAgBoBL,CAAC,EAhBrB,EAiBE;AACAJ,QAAAA,QAAQ,GAAG,IAAX;AACAG,QAAAA,MAAM,CAACC,CAAD,CAAN,GAAYZ,IAAI,CAACO,SAAL,CAAeR,KAAK,CAACa,CAAD,CAApB,EAAyBE,OAAzB,CAAZ;AACD;;AACD,aAAO,MAAMH,MAAM,CAACO,IAAP,CAAY,GAAZ,CAAN,GAAyB,GAAhC;AACD;AAhCW,GAAd;AAoCA,SAAOxB,OAAP;;AAEA,WAASW,MAAT,CAAgBN,KAAhB,EAAuBoB,MAAvB,EAA+BR,MAA/B,EAAuC;AACrC,WAAOS,MAAM,CAACC,IAAP,CAAYV,MAAZ,EAAoBW,MAApB,CACL,UAAUX,MAAV,EAAkBI,GAAlB,EAAuB;AACrB,UAAIX,KAAK,GAAGO,MAAM,CAACI,GAAD,CAAlB;;AACA,UAAIX,KAAK,YAAYT,SAArB,EAAgC;AAC9B,YAAI4B,GAAG,GAAGxB,KAAK,CAACK,KAAD,CAAf;;AACA,YAAI,OAAOmB,GAAP,KAAe,QAAf,IAA2B,CAACJ,MAAM,CAACK,GAAP,CAAWD,GAAX,CAAhC,EAAiD;AAC/CJ,UAAAA,MAAM,CAACM,GAAP,CAAWF,GAAX;AACAZ,UAAAA,MAAM,CAACI,GAAD,CAAN,GAAcV,MAAM,CAACN,KAAD,EAAQoB,MAAR,EAAgBI,GAAhB,CAApB;AACD,SAHD,MAGO;AACLZ,UAAAA,MAAM,CAACI,GAAD,CAAN,GAAcQ,GAAd;AACD;AACF;;AACD,aAAOZ,MAAP;AACD,KAbI,EAcLA,MAdK,CAAP;AAgBD;;AAED,WAASE,GAAT,CAAaJ,KAAb,EAAoBV,KAApB,EAA2BK,KAA3B,EAAkC;AAChC,QAAIsB,KAAK,GAAG/B,SAAS,CAACI,KAAK,CAAC4B,IAAN,CAAWvB,KAAX,IAAoB,CAArB,CAArB;AACAK,IAAAA,KAAK,CAACI,GAAN,CAAUT,KAAV,EAAiBsB,KAAjB;AACA,WAAOA,KAAP;AACD;;AAED,WAASvB,UAAT,CAAoBC,KAApB,EAA2B;AACzB,WAAOA,KAAK,YAAYT,SAAjB,GAA6BA,SAAS,CAACS,KAAD,CAAtC,GAAgDA,KAAvD;AACD;;AAED,WAASH,UAAT,CAAoBc,GAApB,EAAyBX,KAAzB,EAAgC;AAC9B,WAAO,OAAOA,KAAP,KAAiBR,SAAjB,GAA6B,IAAID,SAAJ,CAAcS,KAAd,CAA7B,GAAoDA,KAA3D;AACD;AAEF,CA3Fc,CA2FbwB,MA3Fa,EA2FL,QA3FK,CAAf;;AA4FA,eAAelC,OAAf;AACA,OAAO,MAAMG,KAAK,GAAGH,OAAO,CAACG,KAAtB;AACP,OAAO,MAAMU,SAAS,GAAGb,OAAO,CAACa,SAA1B","sourcesContent":["var Flatted = (function (Primitive, primitive) {\n\n  /*!\n   * ISC License\n   *\n   * Copyright (c) 2018, Andrea Giammarchi, @WebReflection\n   *\n   * Permission to use, copy, modify, and/or distribute this software for any\n   * purpose with or without fee is hereby granted, provided that the above\n   * copyright notice and this permission notice appear in all copies.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n   * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n   * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n   * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n   * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n   * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n   * PERFORMANCE OF THIS SOFTWARE.\n   */\n\n  var Flatted = {\n\n    parse: function parse(text) {\n      var input = JSON.parse(text, Primitives).map(primitives);\n      var value = input[0];\n      return typeof value === 'object' && value ?\n              revive(input, new Set, value) : value;\n    },\n\n    stringify: function stringify(value) {\n      for (var\n        firstRun,\n        known = new Map,\n        input = [],\n        output = [],\n        i = +set(known, input, value),\n        replace = function (key, value) {\n          if (firstRun) return (firstRun = !firstRun), value;\n          switch (typeof value) {\n            case 'object':\n              if (value === null) return value;\n            case primitive:\n              return known.get(value) || set(known, input, value);\n          }\n          return value;\n        };\n        i < input.length; i++\n      ) {\n        firstRun = true;\n        output[i] = JSON.stringify(input[i], replace);\n      }\n      return '[' + output.join(',') + ']';\n    }\n\n  };\n\n  return Flatted;\n\n  function revive(input, parsed, output) {\n    return Object.keys(output).reduce(\n      function (output, key) {\n        var value = output[key];\n        if (value instanceof Primitive) {\n          var tmp = input[value];\n          if (typeof tmp === 'object' && !parsed.has(tmp)) {\n            parsed.add(tmp);\n            output[key] = revive(input, parsed, tmp);\n          } else {\n            output[key] = tmp;\n          }\n        }\n        return output;\n      },\n      output\n    );\n  }\n\n  function set(known, input, value) {\n    var index = Primitive(input.push(value) - 1);\n    known.set(value, index);\n    return index;\n  }\n\n  function primitives(value) {\n    return value instanceof Primitive ? Primitive(value) : value;\n  }\n\n  function Primitives(key, value) {\n    return typeof value === primitive ? new Primitive(value) : value;\n  }\n\n}(String, 'string'));\nexport default Flatted;\nexport const parse = Flatted.parse;\nexport const stringify = Flatted.stringify;\n"]},"metadata":{},"sourceType":"module"}